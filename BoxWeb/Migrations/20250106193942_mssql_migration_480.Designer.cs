// <auto-generated />
using ConsoleApp1;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BoxWeb.Migrations
{
    [DbContext(typeof(BoxContext))]
    [Migration("20250106193942_mssql_migration_480")]
    partial class mssql_migration_480
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ConsoleApp1.Club", b =>
                {
                    b.Property<int>("ClubID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClubID"));

                    b.Property<string>("ClubName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClubID");

                    b.ToTable("Clubs");
                });

            modelBuilder.Entity("ConsoleApp1.Coach", b =>
                {
                    b.Property<int>("CoachID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CoachID"));

                    b.Property<string>("Adress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BirthsdayDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ClubID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("PhoneNumber")
                        .HasColumnType("bigint");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CoachID");

                    b.HasIndex("ClubID");

                    b.ToTable("Coaches");
                });

            modelBuilder.Entity("ConsoleApp1.Fight", b =>
                {
                    b.Property<int>("FightID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FightID"));

                    b.Property<bool>("BattleResult")
                        .HasColumnType("bit");

                    b.Property<int>("DateOfFight")
                        .HasColumnType("int");

                    b.Property<int?>("TournamentID")
                        .HasColumnType("int");

                    b.HasKey("FightID");

                    b.HasIndex("TournamentID");

                    b.ToTable("Fights");
                });

            modelBuilder.Entity("ConsoleApp1.Refeere", b =>
                {
                    b.Property<int>("RefeereID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RefeereID"));

                    b.Property<string>("Adress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BirthsdayDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("PhoneNumber")
                        .HasColumnType("bigint");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RefeereID");

                    b.ToTable("Refeeres");
                });

            modelBuilder.Entity("ConsoleApp1.SF", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("FightID")
                        .HasColumnType("int");

                    b.Property<int>("SportsmanID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("FightID");

                    b.HasIndex("SportsmanID");

                    b.ToTable("SFs");
                });

            modelBuilder.Entity("ConsoleApp1.Sportsman", b =>
                {
                    b.Property<int>("SportsmanID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SportsmanID"));

                    b.Property<string>("Achivments")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Adress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AgeGroup")
                        .HasColumnType("int");

                    b.Property<string>("BirthsdayDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ClubID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("PhoneNumber")
                        .HasColumnType("bigint");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WeightCategory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SportsmanID");

                    b.HasIndex("ClubID");

                    b.ToTable("Sportmen");
                });

            modelBuilder.Entity("ConsoleApp1.Tournament", b =>
                {
                    b.Property<int>("TournamentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TournamentID"));

                    b.Property<string>("Adress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EndDate")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RefeereID")
                        .HasColumnType("int");

                    b.Property<int>("StartDate")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("TournamentID");

                    b.HasIndex("RefeereID");

                    b.ToTable("Tournaments");
                });

            modelBuilder.Entity("ConsoleApp1.Coach", b =>
                {
                    b.HasOne("ConsoleApp1.Club", "Club")
                        .WithMany("Coaches")
                        .HasForeignKey("ClubID")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Club");
                });

            modelBuilder.Entity("ConsoleApp1.Fight", b =>
                {
                    b.HasOne("ConsoleApp1.Tournament", "Tournament")
                        .WithMany("Fight")
                        .HasForeignKey("TournamentID")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Tournament");
                });

            modelBuilder.Entity("ConsoleApp1.SF", b =>
                {
                    b.HasOne("ConsoleApp1.Fight", "fight")
                        .WithMany()
                        .HasForeignKey("FightID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ConsoleApp1.Sportsman", "sportsman")
                        .WithMany()
                        .HasForeignKey("SportsmanID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("fight");

                    b.Navigation("sportsman");
                });

            modelBuilder.Entity("ConsoleApp1.Sportsman", b =>
                {
                    b.HasOne("ConsoleApp1.Club", "Club")
                        .WithMany("Sportsmen")
                        .HasForeignKey("ClubID")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Club");
                });

            modelBuilder.Entity("ConsoleApp1.Tournament", b =>
                {
                    b.HasOne("ConsoleApp1.Refeere", "Refeere")
                        .WithMany("Tournament")
                        .HasForeignKey("RefeereID")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Refeere");
                });

            modelBuilder.Entity("ConsoleApp1.Club", b =>
                {
                    b.Navigation("Coaches");

                    b.Navigation("Sportsmen");
                });

            modelBuilder.Entity("ConsoleApp1.Refeere", b =>
                {
                    b.Navigation("Tournament");
                });

            modelBuilder.Entity("ConsoleApp1.Tournament", b =>
                {
                    b.Navigation("Fight");
                });
#pragma warning restore 612, 618
        }
    }
}
